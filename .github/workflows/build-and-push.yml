name: build-push

on:
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.50
        with:
          cosign-release: "v2.2.4"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # a cunning autotagger
      # developer can controll version bump via commit message hashtag: #major, #minor
      - name: Autotag
        uses: anothrNick/github-tag-action@1.70.0
        id: autotag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: "true"
          DEFAULT_BUMP: "patch"
          PRERELEASE: "true"

      - name: set image variable
        run: |
          export IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.autotag.outputs.new_tag || 'unknown' }}"
          echo "About to build and release: ${IMAGE}"
          echo "IMAGE=${IMAGE}" >> $GITHUB_ENV

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64, linux/arm/v6
          push: true
          tags: ${{ env.IMAGE }}
          labels: ${{ steps.meta.outputs.labels || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "${{ steps.autotag.outputs.new_tag || 'unknown' }}"
          tag: "${{ steps.autotag.outputs.new_tag || 'unknown' }}"

      - name: Sign the published Docker image
        env:
          TAGS: "${{ env.IMAGE }}"
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Display Docker Image in Run Summary
        run: |
          echo "Built and Pushed Docker Image" >> $GITHUB_ENV
          echo "Docker Image: ${{ env.IMAGE }}" >> $GITHUB_ENV
          echo "Artifact URL: https://github.com/${{ github.repository }}/packages/container/${{ env.IMAGE_NAME }}/versions/${{ steps.autotag.outputs.new_tag || 'unknown' }}/" >> $GITHUB_ENV